from communex.client import CommuneClient
from communex._common import get_node_url
from communex.compat.key import Keypair
import json
import time

comx = CommuneClient(get_node_url())

valis = {
    "eden.Validator": {
        "key": "5Df8AUJhN9G3CtyV3cGNLr2g388kRDmYUA9ZYvdPz79x3hA2"
    },
    "vali::eden00": {
        "key": "5EJKwpcNneo7Jutnktod4gWeGbXKgriY7RrxqSE7QMa32u4M"
    },
    "vali::eden": {
        "key": "5DtTeoNjcN19qTpoFgyW9iQaiRsYtBPF5FarjoxPEy4k4ieJ"
    },
    "commie3": {
        "key": "5CkghExW7kSbDg2phCuQR4K5QqdVsUjdQqGtkME9hGwz5PB6"
    }
}


def get_vali_keypair(vali_name):
    print(vali_name)
    with open(f"/home/bakobi/.commune/key/{vali_name}.json", "r", encoding="utf-8") as f:
        json_data = json.loads(f.read())["data"]
        data = json.loads(json_data)
        return Keypair(
            ss58_address=data["ss58_address"],
            private_key=data["private_key"],
            public_key=data["public_key"],
        )
    
def subnet10(keypair):
    uids = [313, 267, 518, 0, 755, 201, 798, 346, 711, 430, 209, 393, 366, 537, 643, 108, 481, 605, 101, 546, 695, 29, 186, 229, 367, 451, 673, 769, 740, 383, 552, 701, 752, 290, 418, 782, 705, 623, 789, 408, 702, 102, 387, 90, 24, 525, 538, 555, 453, 683, 329, 67, 796, 262, 811, 157, 282, 729, 718, 300, 527, 657, 369, 559, 646, 489, 103, 808, 49, 516, 515, 202, 368, 666, 212, 809, 681, 751, 604, 227, 529, 407, 448, 78, 573, 561, 756, 694, 283, 624, 392, 799, 269, 490, 475, 215, 616, 577, 133, 397, 488, 691, 18, 326, 654, 421, 121, 167, 602, 3, 14, 2, 270, 670, 294, 792, 805, 398, 455, 416, 585, 425, 560, 39, 659, 506, 191, 638, 536, 272, 497, 404, 340, 63, 543, 389, 570, 672, 298, 767, 113, 707, 382, 553, 56, 791, 520, 592, 697, 401, 88, 665, 578, 716, 703, 668, 663, 374, 299, 145, 775, 105, 317, 371, 285, 679, 794, 778, 615, 690, 207, 351, 119, 772, 362, 253, 587, 501, 302, 770, 399, 633, 204, 305, 677, 236, 396, 423, 295, 31, 168, 58, 110, 174, 487, 242, 513, 325, 301, 213, 91, 138, 21, 669, 318, 25, 258, 129, 124, 151, 75, 12, 104, 261, 601, 728, 664, 676, 568, 528, 810, 542, 211, 286, 733, 803, 80, 87, 342, 219, 210, 750, 13, 610, 532, 797, 120, 327, 225, 802, 557, 304, 625, 4, 417, 107, 452, 237, 8, 268, 505, 223, 530, 159, 73, 656, 363, 472, 774, 249, 619, 65, 720, 551, 731, 330, 771, 589, 745, 59, 390, 556, 79, 502, 495, 436, 478, 162, 765, 579, 32, 38, 188, 651, 394, 359, 11, 64, 410, 26, 632, 427, 388, 548, 360, 463, 510, 658, 608, 353, 338, 761, 723, 554, 136, 28, 583, 499, 196, 400, 440, 460, 713, 571, 637, 264, 331, 413, 337, 629, 564, 461, 379, 198, 149, 744, 614, 287, 147, 704, 99, 655, 243, 156, 241, 62, 582, 181, 245, 574, 567, 607, 618, 386, 341, 265, 153, 68, 533, 444, 449, 818, 356, 257, 172, 34, 781, 468, 432, 158, 801, 742, 747, 16, 628, 240, 689, 86, 812, 405, 307, 793, 278, 539, 251, 473, 289, 597, 630, 685, 71, 55, 52, 47, 757, 137, 339, 428, 70, 320, 134, 412, 591, 768, 310, 365, 277, 717, 221, 332, 37, 169, 321, 220, 184, 476, 51, 819, 545, 441, 773, 474, 732, 203, 36, 760, 438, 737, 620, 316, 135, 271, 238, 296, 144, 276, 155, 226, 42, 85, 764, 92, 466, 434, 97, 303, 492, 185, 566, 710, 308, 524, 293, 595, 675, 477, 406, 128, 109, 483, 698, 680, 519, 686, 627, 344, 176, 139, 273, 118, 111, 780, 6, 523, 74, 160, 239, 714, 189, 815, 572, 150, 584, 234, 361, 193, 358, 69, 479, 813, 5, 485, 739, 621, 611, 817, 117, 465, 753, 730, 143, 163, 503, 206, 190, 674, 384, 645, 244, 806, 508, 45, 233, 22, 377, 565, 496, 254, 726, 649, 596, 634, 721, 736, 33, 140, 57, 141, 350, 437, 469, 507, 766, 692, 708, 787, 498, 667, 200, 94, 41, 250, 112, 30, 569, 146, 491, 504, 422, 777, 166, 357, 788, 46, 424, 336, 43, 415, 154, 763, 178, 130, 314, 617, 743, 511, 7, 641, 328, 100, 76, 161, 48, 738, 541, 131, 653, 464, 349, 494, 746, 275, 230, 709, 609, 606, 195, 804, 447, 531, 648, 173, 544, 644, 409, 575, 722, 512, 586, 235, 411, 378, 748, 786, 795, 142, 534, 27, 581, 535, 652, 814, 639, 164, 214, 471, 208, 735, 642, 115, 53, 807, 197, 693, 700, 187, 563, 345, 391, 66, 40, 180, 284, 372, 522, 312, 509, 626, 650, 93, 445, 309, 288, 439, 459, 671, 315, 613, 291, 482, 83, 759, 749, 256, 61, 526, 260, 622, 126, 446, 395, 600, 114, 699, 500, 123, 127, 319, 598, 170, 259, 81, 148, 60, 762, 588, 442, 177, 35, 402, 194, 50, 790, 122, 15, 599, 182, 263, 433, 758, 706, 266, 222, 116, 661, 647, 712, 217, 594, 373, 719, 576, 77, 682, 248, 354, 279, 800, 381, 54, 171, 776, 420, 311, 323, 734, 380, 612, 580, 72, 224, 431, 462, 779, 17, 741, 322, 10, 352, 348, 784, 484, 715, 403, 89, 19, 470, 635, 603, 435, 183, 274, 385, 1, 456, 255, 467, 44, 96, 725, 727, 550, 343, 84, 547, 816, 364, 558, 175, 98, 199, 458, 95, 281, 724, 783, 540, 457, 590, 450, 23, 125, 562, 514, 688, 517, 480, 231, 443, 696, 426, 216, 678, 375, 454, 20] 
    weights = [0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0]
    
    vote = comx.vote(keypair, uids, weights, netuid=10)
    print(vote.is_success)
    print(vote.extrinsic)
    return vote





def get_vali_uids(subnet, keypair):
    vali_uid = None
    vali_uids = []
    key_map = comx.query_map_key(netuid=subnet)    
    keys = []
    for _, key in valis.items():
        keys.append(key["key"])
        
    for uid, key in key_map.items():
        if key == keypair.ss58_address:
            print(uid)
            vali_uid = uid
            continue
        if key in keys:
            vali_uids.append(uid)
            
    return vali_uids, vali_uid

def subnetvote(subnet=3, keypair=None):
    print(subnet)
    print(keypair.ss58_address)
    vali_uids, vali_uid = get_vali_uids(subnet, keypair)
    fam_uid = None
    name_map = comx.query_map_name(netuid=subnet)
    for uid, name in name_map.items():
        if name == "fam":
            print(f"{uid} {name}")
            fam_uid = uid
    
    weight_map = comx.query_map_weights(netuid=subnet)
    
    fam_weights = weight_map[fam_uid]
    weights = []
    uids = []
    for uid, weight in fam_weights:
        if uid == vali_uid:
            continue
        weights.append(weight)
        uids.append(uid)
    for uid in vali_uids:
        weight = max(weights)
        if uid not in uids:
            weights.append(weight)
            uids.append(uid)
    try:
        vote = comx.vote(keypair, uids, weights, netuid=2)
        print(vote.is_success)
        print(vote.extrinsic)
    except Exception as e:
        print(e)
    

        
        
subnets = [3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 17]

hours = 60 * 60
minutes = 60


vali_key = get_vali_keypair("eden.Validator")
print(vali_key)

result = subnet10(vali_key)
print(result)

# while True:
    # vali_key = None
    # for vali_name, vali in valis.items():
        # vali_key = vali["key"]
        # keypair = get_vali_keypair(vali_name)
        # print(subnet10(keypair))
        # for subnet in subnets:
            # subnetvote(subnet, keypair)
    # time.sleep(30 * minutes)